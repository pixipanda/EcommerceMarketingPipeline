<workflow-app name="Prepare Data" xmlns="uri:oozie:workflow:0.5">
    <start to="add_hive_partitions"/>
    <action name="add_hive_partitions">
        <hive2 xmlns="uri:oozie:hive2-action:0.1">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <jdbc-url>jdbc:hive2://quickstart.cloudera:10000/default</jdbc-url>
            <script>/code/hive/read-hive.hql</script>
            <param>omniture_raw_path=${omniture_raw_path}</param>
            <param>date_ts=${date_ts}</param>
        </hive2>
        <ok to="PrepareOmnitureDataSpark"/>
        <error to="Kill"/>
    </action>

    <action name="PrepareOmnitureDataSpark">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <job-xml>${jobXml}</job-xml>
            <master>yarn</master>
            <mode>client</mode>
            <name>PrepareOmnitureData</name>
            <class>org.anish.spark.jobs.PrepareOmnitureData</class>
            <jar>e-commerce-marketing-spark.jar</jar>
            <arg>--date_ts</arg>
            <arg>${date_ts}</arg>
            <file>/code/spark/e-commerce-marketing-spark.jar#e-commerce-marketing-spark.jar</file>
            <file>${jobXml}#hive-site.xml</file>
        </spark>
        <ok to="PrepareSalesDataSpark"/>
        <error to="Kill"/>
    </action>
    <action name="PrepareSalesDataSpark">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <job-xml>${jobXml}</job-xml>
            <master>yarn</master>
            <mode>client</mode>
            <name>PrepareSalesData</name>
            <class>org.anish.spark.jobs.PrepareSalesData</class>
            <jar>e-commerce-marketing-spark.jar</jar>
            <spark-opts>--packages com.databricks:spark-csv_2.10:1.5.0 --executor-memory 3G --num-executors 1</spark-opts>
            <arg>--rawSalesDataSource</arg>
            <arg>${sales_raw_path}</arg>
            <arg>--date_ts</arg>
            <arg>${date_ts}</arg>
            <arg>--topSpendersToAnalyze</arg>
            <arg>${topSpendersToAnalyze}</arg>
            <file>/code/spark/e-commerce-marketing-spark.jar#e-commerce-marketing-spark.jar</file>
            <file>${jobXml}#hive-site.xml</file>
        </spark>
        <ok to="MapSessionSales"/>
        <error to="Kill"/>
    </action>

    <action name="MapSessionSales">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <job-xml>${jobXml}</job-xml>
            <master>yarn</master>
            <mode>client</mode>
            <name>MapSessionSales</name>
            <class>org.anish.spark.jobs.MapSessionSales</class>
            <jar>e-commerce-marketing-spark.jar</jar>
            <spark-opts>--packages com.databricks:spark-csv_2.10:1.5.0
                --driver-memory 2g --executor-memory 4g
                --conf spark.sql.parquet.compression.codec=snappy
                --conf spark.sql.parquet.filterPushdown=true
                --conf spark.sql.parquet.mergeSchema=false
                --conf spark.sql.parquet.filterPushdown=true
                --conf spark.sql.parquet.filterPushdown=true
                --conf spark.sql.hive.metastorePartitionPruning=true</spark-opts>
            <arg>--date_ts</arg>
            <arg>${date_ts}</arg>
            <file>/code/spark/e-commerce-marketing-spark.jar#e-commerce-marketing-spark.jar</file>
            <file>${jobXml}#hive-site.xml</file>
        </spark>
        <ok to="DailyTopSpenders"/>
        <error to="Kill"/>
    </action>
    <action name="DailyTopSpenders">
        <spark xmlns="uri:oozie:spark-action:0.2">
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <job-xml>${jobXml}</job-xml>
            <master>yarn</master>
            <mode>client</mode>
            <name>DailyTopSpenders</name>
            <class>org.anish.spark.jobs.DailyTopSpenders</class>
            <jar>e-commerce-marketing-spark.jar</jar>
            <spark-opts>--packages com.databricks:spark-csv_2.10:1.5.0
                --conf spark.sql.parquet.compression.codec=snappy
                --conf spark.sql.parquet.filterPushdown=true
                --conf spark.sql.parquet.mergeSchema=false
                --conf spark.sql.parquet.filterPushdown=true
                --conf spark.sql.parquet.filterPushdown=true
                --conf spark.sql.hive.metastorePartitionPruning=true</spark-opts>
            <arg>--date_ts</arg>
            <arg>${date_ts}</arg>
            <arg>--topSpendersToAnalyze</arg>
            <arg>${topSpendersToAnalyze}</arg>
            <file>/code/spark/e-commerce-marketing-spark.jar#e-commerce-marketing-spark.jar</file>
            <file>${jobXml}#hive-site.xml</file>
        </spark>
        <ok to="Cleanup"/>
        <error to="Kill"/>
    </action>


    <!--Clean up the success files at input to mark input is ingested-->
    <!--This is because the IngestData.sh shell script doesn't load more data if previous hours data has not been processed yet-->
    <action name="Cleanup">
        <fs>
            <delete path='${nameNode}/${sales_raw_path}/_SUCCESS'/>
            <delete path='${nameNode}/${omniture_raw_path}/_SUCCESS'/>
            <delete path='${nameNode}/${baseFsURI}/_SUCCESS'/>
        </fs>
        <ok to="End"/>
        <error to="End"/> <!-- Probably it was already deleted. - Other error can be permission issues / name node in safe mode, but for demo we can ignore this failure.-->
    </action>

    <kill name="Kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="End"/>
</workflow-app>

